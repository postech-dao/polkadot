name: Rust

on:
  push:
    branches: ["main", "develop-grt"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt

      - uses: actions/checkout@v3

      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy

      - uses: actions/checkout@v3

      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: clippy
          args: --workspace --exclude rust_analyzer_wasm --exclude contracts --all-targets --all-features

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose
      - name: Pull docker image
        run: docker pull docker.io/achimcc/ink-backend:latest
      - name: Tag docker image
        run: docker tag docker.io/achimcc/ink-backend:latest ink-backend
      - name: Run tests
        run: cargo test --workspace --exclude rust_analyzer_wasm --verbose

  build_contracts:
    runs-on: ubuntu-latest
    steps:
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - uses: actions/checkout@v3
      - name: Install podman
        run: sudo apt-get -y install podman
      - name: make alias preliminary
        run: shopt -s expand_aliases
      - name: Run shell scipt cargoenvhere
        run: source ./snippets/.bashrc
        shell: bash
      - name: Pull docker image
        run: docker pull paritytech/contracts-ci-linux:production
        shell: bash
      - name: Build simple_counter
        run: | 
        dirname="$(basename $(pwd))"
        user=$(whoami)
        echo "Cargo as a virtual environment in" "$dirname" "dir"
        mkdir -p /home/"$user"/cache/"$dirname"
        podman run --rm -it -w /shellhere/"$dirname" \
                      -v "$(pwd)":/shellhere/"$dirname" \
                      -v /home/"$user"/cache/"$dirname"/:/cache/ \
                      -e CARGO_HOME=/cache/cargo/ \
                      -e SCCACHE_DIR=/cache/sccache/ \
                      -e CARGO_TARGET_DIR=/cache/target/ "$@"
        paritytech/contracts-ci-linux:production /bin/bash -c cargo +nightly contract build --manifest-path ./contracts/simple_counter/Cargo.toml
        shell: bash
      - name: Build simple_counter_with_hashmap
        run: cargoenvhere paritytech/contracts-ci-linux:production /bin/bash -c cargo +nightly contract build --manifest-path ./contracts/simple_counter_with_hashmap/Cargo.toml
        shell: bash
